/*!
 * Datadaan
 * Datavisualisation
 * https://datadaan.nl
 * @author Daan van der Zwaag
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
*{box-sizing:border-box;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}html{background-color:#fff}body{font:400 Cabin,sans-serif,Helvetica Neue,Helvetica,Arial;line-height:1.6;color:#fff;transition:all .4s ease-in .3s}

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */*{box-sizing:border-box}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}body{color:#fff;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;overflow:hidden;overflow-y:scroll;min-height:100vh;background-color:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.noscroll{overflow:hidden}.sidebar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;height:100vh;width:300px;position:fixed;color:#0000ed;padding:75px}.sidebar.sidebar--left{left:0;top:0;padding-right:0}.sidebar.sidebar--left header h1{margin-left:-1px;line-height:.8}.sidebar.sidebar--left nav ul{list-style:none;padding:0}.sidebar.sidebar--left footer{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-bottom:15px}.sidebar.sidebar--left footer p{margin:0}.sidebar.sidebar--left footer p a{display:inline}.sidebar.sidebar--left footer p:hover{color:#0000ed}.sidebar.sidebar--left footer p:hover a{font-weight:400}.sidebar.sidebar--right{right:0;top:0;-ms-flex-align:end;align-items:flex-end;padding-left:0}main{width:100%;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;-ms-flex-align:center;transition:cubic-bezier(.76,.44,.39,.78)}main,main .section--fullheight{display:-ms-flexbox;display:flex;justify-content:center;align-items:center}main .section--fullheight{-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end;width:calc(100% - ((100vw - 150px) / 5 - 2px));height:100vh;padding:0 90px 0 75px;-ms-flex-pack:center;-ms-flex-align:center}main .section--fullheight.section__intro h2{font-size:2vw;font-family:Cabin,sans-serif;color:#0000ed}.area{fill:#000;-webkit-clip-path:url(#clip);clip-path:url(#clip)}.zoom{cursor:move;fill:none;pointer-events:all}.js .loading:before{content:"";position:fixed;z-index:1;top:0;left:0;display:-ms-flexbox;display:flex;width:100%;height:100%;text-align:center;background:#0000ed}.js .loading:after{content:"";position:fixed;z-index:2;pointer-events:none;-webkit-transform:translateY(-50%);transform:translateY(-50%);top:50%;width:37.5px;height:1px;background-color:#fff;-webkit-animation:loaderAnimation 2.35s ease-in-out forwards;animation:loaderAnimation 2.35s ease-in-out forwards}@-webkit-keyframes loaderAnimation{33%{width:calc((100vw - 150px) / 5 - 2px)}to{width:0}}@keyframes loaderAnimation{33%{width:calc((100vw - 150px) / 5 - 2px)}to{width:0}}.grid--lines .lines__horizontal,.grid--lines .lines__vertical{display:-ms-flexbox;display:flex;pointer-events:none;-ms-flex-pack:justify;justify-content:space-between;position:fixed}.grid--lines .lines__horizontal .line,.grid--lines .lines__vertical .line{background-color:rgba(0,0,0,.1)}.grid--lines .lines__vertical{-ms-flex-direction:row;flex-direction:row;width:calc(100% - 150px - 15px);height:100%;top:0;left:75px}.grid--lines .lines__vertical .line{height:100%;width:1px}.grid--lines .lines__horizontal{-ms-flex-direction:column;flex-direction:column;width:100%;height:calc(100% - 150px - 15px);top:75px;left:0}.grid--lines .lines__horizontal .line{width:100%;height:1px}.logo{width:30px;color:#0000ed}.logo svg{width:100%;height:auto}.icon{display:inline-block;position:relative;width:30px;cursor:pointer}.icon span{background:#0000ed;position:absolute}.arrow{height:30px;width:30px;margin-bottom:10px;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.arrow div{height:1px;position:absolute;left:0;right:0;top:calc(50% - 0.5px)}.arrow div:before{content:"";position:absolute;background:#0000ed;top:0;left:1.5px;right:1.5px;bottom:0;transition:-webkit-transform .4s cubic-bezier(.5,0,0,1) .3s;transition:transform .4s cubic-bezier(.5,0,0,1) .3s;transition:transform .4s cubic-bezier(.5,0,0,1) .3s,-webkit-transform .4s cubic-bezier(.5,0,0,1) .3s;-webkit-transform:translate3d(1.5px,0,0);transform:translate3d(1.5px,0,0)}.arrow span{height:15px;width:1px;background:none}.arrow span:before{content:"";background:#0000ed;transition:.4s cubic-bezier(.5,0,0,1) .4s;top:0;left:0;bottom:0;right:0;position:absolute}.arrow span:nth-of-type(2n):before{-webkit-transform-origin:top;transform-origin:top}.arrow span:nth-of-type(odd):before{-webkit-transform-origin:bottom;transform-origin:bottom}.arrow span:first-of-type{bottom:0;-webkit-transform:translate3d(-3.75px,1.76471px,0) rotate(-45deg);transform:translate3d(-3.75px,1.76471px,0) rotate(-45deg)}.arrow span:nth-of-type(2){top:0;-webkit-transform:translate3d(-3.75px,-1.76471px,0) rotate(45deg);transform:translate3d(-3.75px,-1.76471px,0) rotate(45deg)}.arrow span:nth-of-type(3){bottom:0;-webkit-transform:translate3d(3.75px,1.76471px,0) rotate(45deg);transform:translate3d(3.75px,1.76471px,0) rotate(45deg)}.arrow span:nth-of-type(4){top:0;-webkit-transform:translate3d(3.75px,-1.76471px,0) rotate(-45deg);transform:translate3d(3.75px,-1.76471px,0) rotate(-45deg)}.arrow span.left:before{-webkit-transform:scaleY(0);transform:scaleY(0);transition:.4s cubic-bezier(.5,0,0,1)}.arrow .right{right:0}.arrow .left{left:0}.arrow.active div:before{-webkit-transform:translate3d(-1.5px,0,0);transform:translate3d(-1.5px,0,0)}.arrow.active .right:before{-webkit-transform:scaleY(0);transform:scaleY(0);transition:.4s cubic-bezier(.5,0,0,1)}.arrow.active .left:before{-webkit-transform:scaleX(1);transform:scaleX(1);transition:.4s cubic-bezier(.5,0,0,1) .4s}h1{font-family:Cabin,sans-serif;font-size:36px;margin:0}h1+p{font-family:Source Code Pro,monospace;font-size:14px;line-height:20px}a{color:inherit;text-decoration:none;font-weight:400;font-family:Cabin,sans-serif;font-size:16px}footer a,footer p{font-weight:300;font-family:Source Code Pro,monospace;font-size:14px;line-height:20px}::selection{background:#0000ed;color:#fff;text-shadow:none}::-moz-selection{background:#0000ed;color:#fff;text-shadow:none}::-webkit-selection{background:#0000ed;color:#fff;text-shadow:none}body.loaded .sidebar.sidebar--left footer,body.loaded .sidebar.sidebar--left header,body.loaded .sidebar.sidebar--left nav{opacity:0;-webkit-animation:986.076ms fadeInBottom forwards;animation:986.076ms fadeInBottom forwards;-webkit-animation-timing-function:cubic-bezier(.76,.44,.39,.78);animation-timing-function:cubic-bezier(.76,.44,.39,.78)}body.loaded .sidebar.sidebar--left header{-webkit-animation-delay:225ms;animation-delay:225ms}body.loaded .sidebar.sidebar--left nav{-webkit-animation-delay:.36s;animation-delay:.36s}body.loaded .sidebar.sidebar--left footer{-webkit-animation-delay:576ms;animation-delay:576ms}body.loaded .sidebar.sidebar--right .arrow--scroll,body.loaded .sidebar.sidebar--right .logo{opacity:0;-webkit-animation:986.076ms fadeInBottom forwards;animation:986.076ms fadeInBottom forwards;-webkit-animation-delay:2.4s;animation-delay:2.4s;-webkit-animation-timing-function:cubic-bezier(.76,.44,.39,.78);animation-timing-function:cubic-bezier(.76,.44,.39,.78)}body.loaded .sidebar.sidebar--right .logo{-webkit-animation-delay:.9216s;animation-delay:.9216s}body.loaded .sidebar.sidebar--right .arrow--scroll{-webkit-animation-delay:1474.56ms;animation-delay:1474.56ms}.block-revealer__element{position:absolute;top:0;left:0;width:100%;height:100%;background:#000;pointer-events:none;opacity:0}@-webkit-keyframes fadeInBottom{0%{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}75%{opacity:1}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fadeInBottom{0%{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}75%{opacity:1}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
