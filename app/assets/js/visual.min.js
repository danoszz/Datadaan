/*!
 * Datadaan
 * Datavisualisation
 * https://datadaan.nl
 * @author Daan van der Zwaag
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(){"use strict";function t(){if(!d3.event.sourceEvent||"zoom"!==d3.event.sourceEvent.type){var t=d3.event.selection||u.range();p.domain(t.map(u.invert,u)),E.select(".area").attr("d",y),E.select(".axis--x").call(h),n.select(".zoom").call(b.transform,d3.zoomIdentity.scale(i/(t[1]-t[0])).translate(-t[0],0))}}function a(){if(!d3.event.sourceEvent||"brush"!==d3.event.sourceEvent.type){var t=d3.event.transform;p.domain(t.rescaleX(u).domain()),E.select(".area").attr("d",y),E.select(".axis--x").call(h),L.select(".brush").call(x.move,p.range().map(t.invertX,t))}}function e(t){return t.date=l(t.date),t.price=+t.price,t}function r(t,a,e,r,n,s,o){function i(){c.selectAll("path").attr("transform","translate("+m(1)+")").data([u[0]]).attr("d",h).transition().ease(d3.easeLinear).duration(.95*o).attr("transform","translate("+m(0)+")")}function d(){c.selectAll("path").data([u[0]]).attr("d",h)}var c=d3.select(t).append("svg:svg").attr("width","100%").attr("height","100%"),l=[3,6,2,7,5,2,1,3,8,9,2,5,9,3,6,3,6,2,7,5,2,1,3,8,9,2,5,9,2,7,5,2,1,3,8,9,2,5,9,3,6,2,7,5,2,1,3,8,9,2,9],p=[33,76,67,74,32,82,62,1,78,4,13,88,61,26,58,42,79,69,3,19,10,91,94,20,27,8,51,87,85,65,17,77,35,37,93,36,60,63,39,73,43,75,9,66,25,49,97,90,47,70,18,41,50,34,53,23,30,92,14,84,16,95,28,31,96,68,80,21,72,99,15,83,6,64,59,54,86,12,55,71,7,22,52,24,5,29,56,2,100,98,48,11,40,57,45,81,89,38,46,44],u=[l,p],m=d3.scaleLinear().domain([0,48]).range([-5,a]),f=d3.scaleLinear().domain([0,10]).range([0,e]),h=d3.line().x(function(t,a){return m(a)}).y(function(t){return f(t)});"basis"===r&&h.curve(d3.curveCatmullRom.alpha(.5)),c.append("svg:path").attr("d",h(u[0])),setInterval(function(){var t=u[0].shift();u[0].push(t),n?i():d()},s)}var n=d3.select("#area1"),s={top:20,right:20,bottom:110,left:40},o={top:430,right:20,bottom:30,left:40},i=+n.attr("width")-s.left-s.right,d=+n.attr("height")-s.top-s.bottom,c=+n.attr("height")-o.top-o.bottom,l=d3.timeParse("%b %Y"),p=d3.scaleTime().range([0,i]),u=d3.scaleTime().range([0,i]),m=d3.scaleLinear().range([d,0]),f=d3.scaleLinear().range([c,0]),h=d3.axisBottom(p),v=d3.axisBottom(u),g=d3.axisLeft(m),x=d3.brushX().extent([[0,0],[i,c]]).on("brush end",t),b=d3.zoom().scaleExtent([1,1/0]).translateExtent([[0,0],[i,d]]).extent([[0,0],[i,d]]).on("zoom",a),y=d3.area().curve(d3.curveMonotoneX).x(function(t){return p(t.date)}).y0(d).y1(function(t){return m(t.price)}),z=d3.area().curve(d3.curveMonotoneX).x(function(t){return u(t.date)}).y0(c).y1(function(t){return f(t.price)});n.append("defs").append("clipPath").attr("id","clip").append("rect").attr("width",i).attr("height",d);var E=n.append("g").attr("class","focus").attr("transform","translate("+s.left+","+s.top+")"),L=n.append("g").attr("class","context").attr("transform","translate("+o.left+","+o.top+")");d3.csv("assets/data/sp500.csv",e,function(t,a){if(t)throw t;p.domain(d3.extent(a,function(t){return t.date})),m.domain([0,d3.max(a,function(t){return t.price})]),u.domain(p.domain()),f.domain(m.domain()),E.append("path").datum(a).attr("class","area").attr("d",y),E.append("g").attr("class","axis axis--x").attr("transform","translate(0,"+d+")").call(h),E.append("g").attr("class","axis axis--y").call(g),L.append("path").datum(a).attr("class","area").attr("d",z),L.append("g").attr("class","axis axis--x").attr("transform","translate(0,"+c+")").call(v),L.append("g").attr("class","brush").call(x).call(x.move,p.range()),n.append("rect").attr("class","zoom").attr("width",i).attr("height",d).attr("transform","translate("+s.left+","+s.top+")").call(b)}),r("#graph1",2e3,80,"basis",!0,1e3,1e3),r("#graph2",2e3,80,"basis",!0,1e3,1e3)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
